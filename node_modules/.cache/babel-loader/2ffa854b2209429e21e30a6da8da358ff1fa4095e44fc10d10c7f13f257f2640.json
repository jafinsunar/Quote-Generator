{"ast":null,"code":"var _jsxFileName = \"/workspaces/codespaces-react/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useFe, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomQuote(quotes) {\n  return quotes[Math.floor(Math.random() * quotes.length)];\n}\nexport default function App() {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  const [quote, setQuote] = useState(null);\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\").then(res => res.json()).then(json => {\n      setQuotes(json);\n      setQuote(json[0]);\n    });\n  }, []);\n  function getNewQuote() {\n    setQuote(getRandomQuote(quotes));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project : Quote Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getNewQuote,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"oks4XdVzzXN+pXgBc9nO3YffRDc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useFe","useEffect","getRandomQuote","quotes","Math","floor","random","length","App","setQuotes","quote","setQuote","fetch","then","res","json","getNewQuote"],"sources":["/workspaces/codespaces-react/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState,useFe, useEffect\n } from 'react';\n\nfunction getRandomQuote(quotes){\n  return quotes[Math.floor(Math.random()* quotes.length)];\n }\n\n\nexport default function App() {\n  const [quotes, setQuotes] = useState([]);\n  const[quote, setQuote] = useState(null);\n\n\nuseEffect(() => {\n  fetch(\"https://type.fit/api/quotes\")\n  .then ((res) => res.json())\n  .then ((json) => {\n    setQuotes (json);\n    setQuote(json[0]);\n  });\n}, []);\n\n\nfunction getNewQuote() {\n  setQuote(getRandomQuote(quotes));\n}\n\nreturn (\n  <main>\n    <h1>Project : Quote Generator</h1>\n    <section>\n      <button onClick={getNewQuote}>New Quote</button>\n      <h3>\n        <span>\"</span>\n        \n      </h3>\n    </section>\n  </main>\n);\n}\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAACC,KAAK,EAAEC,SAAS,QAC1B,OAAO;AAAC;AAEhB,SAASC,cAAc,CAACC,MAAM,EAAC;EAC7B,OAAOA,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAEH,MAAM,CAACI,MAAM,CAAC,CAAC;AACxD;AAGD,eAAe,SAASC,GAAG,GAAG;EAAA;EAC5B,MAAM,CAACL,MAAM,EAAEM,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAK,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAGzCE,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAAGC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CAC1BF,IAAI,CAAGE,IAAI,IAAK;MACfN,SAAS,CAAEM,IAAI,CAAC;MAChBJ,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,SAASC,WAAW,GAAG;IACrBL,QAAQ,CAACT,cAAc,CAACC,MAAM,CAAC,CAAC;EAClC;EAEA,oBACE;IAAA,wBACE;MAAA,UAAI;IAAyB;MAAA;MAAA;MAAA;IAAA,QAAK,eAClC;MAAA,wBACE;QAAQ,OAAO,EAAEa,WAAY;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS,eAChD;QAAA,uBACE;UAAA,UAAM;QAAC;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA,QAEX;IAAA;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAET;AAAC,GA/BuBR,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}